<?php

namespace Main\Bundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{

    public function getLimmitComments($data)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder()
            ->select('comChain')
            ->from('MainBundle:CommentChain', 'comChain')
            ->join('comChain.chain', 'chainChian')

            ->where('chainChian.id = :chain_chain_id')
            ->setParameter('chain_chain_id', $data['chain'])

            ->orderBy('comChain.created_at','DESC')
        ;

        if (isset($data['limit'])) {
            $query->setMaxResults($data['limit']);
        }

        $result = $query->getQuery()->getResult();


        $query = $em->createQueryBuilder()
            ->select('comDelivery')
            ->from('MainBundle:CommentDelivery', 'comDelivery')

            ->join('comDelivery.chain', 'chainDelivery')

            ->where('chainDelivery.id = :delivery_chain_id')
            ->setParameter('delivery_chain_id', $data['chain'])

            ->orderBy('comDelivery.created_at','DESC')
        ;

        if (isset($data['limit'])) {
            $query->setMaxResults($data['limit']);
        }

        $result = array_merge($query->getQuery()->getResult(), $result);

        usort($result, function ($a, $b) {
            return $b->getCreatedAt()->getTimestamp()-$a->getCreatedAt()->getTimestamp();
        });

        if (isset($data['limit'])) {
            $result = array_slice($result, 0, $data['limit']);
        }

        return $result;
    }

    public function getAllWithLimit(array $data)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder()
            ->select('c')
            ->from('MainBundle:Comment', 'c')
            ->orderBy('c.created_at','DESC')
        ;

        $query->setMaxResults($data['limit']);

        return $query->getQuery()->getResult();
    }
}
